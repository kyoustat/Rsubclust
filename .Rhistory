library(Rsubclust)
library(Rsubclust)
library(Rsubclust)
library(Rsubclust)
devtools::document()
library(Rsubclust)
library(Rsubclust)
library(Rsubclust)
library(Rsubclust)
library(Rsubclust)
library(Rsubclust)
help(simLP)
## test for visualization
set.seed(10)
tester = simLP(n=100, nl=1, np=2, iso.var=0.1)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
par(opar)
## test for visualization
set.seed(10)
tester = simLP(n=100, nl=1, np=2, iso.var=0.1)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## visualize
opar <- par(mfrow=c(2,2))
plot(dat2[,1],dat2[,2],pch=19,cex=0.5,col=label,main="PCA")
plot(data[,1],data[,2],pch=19,cex=0.5,col=label,main="Axis 1 vs 2")
plot(data[,1],data[,3],pch=19,cex=0.5,col=label,main="Axis 1 vs 3")
plot(data[,2],data[,3],pch=19,cex=0.5,col=label,main="Axis 2 vs 3")
par(opar)
opar <- par(no.readonly=TRUE)
require(scatterplot3d)
scatterplot3d::scatterplot3d(x=data, pch=19, cex.symbols=0.5, color=label)
par(opar)
library(Rsubclust)
## generate a toy example of two plane components
set.seed(18)
tester = simLP(n=100, nl=0, np=2)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## run k-plane algorithm with K=2, 3, and 4
kplane2 = kplane(data, K=2)
kplane3 = kplane(data, K=3)
kplane4 = kplane(data, K=4)
## extract clustering
finc2 = kplane2$cluster
finc3 = kplane3$cluster
finc4 = kplane4$cluster
## visualize
opar <- par(mfrow=c(3,4), no.readonly=TRUE)
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(2,3)")
par(opar)
allnames = c("kplane", "kpc")
allnames = paste0("Rsubclust:",allnames)
kpc
allnames
library(Rsubclust)
library(Rsubclust)
library(Rsubclust)
library(Rsubclust)
base::diag(5)
d5cbind(base::diag(5), base::diag(5))
d5 = cbind(base::diag(5), base::diag(5))
d6
d5
apply(d5, 1, which.min)
library(Rsubclust)
## generate a toy example of two plane components
set.seed(18)
tester = simLP(n=100, nl=0, np=2)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## run k-plane algorithm with K=2, 3, and 4
kpcf2 = kpcf(data, K=2, dims=c(2,2))
kpcf3 = kpcf(data, K=3, dims=c(2,2))
kpcf4 = kpcf(data, K=4, dims=c(2,2))
kpcf2 = kpcf(data, K=2, dims=c(2,2))
kpcf3 = kpcf(data, K=3, dims=c(2,2,2))
kpcf4 = kpcf(data, K=4, dims=c(2,2,2,2))
finc2 = kpcf2$cluster
kpcf2
library(Rsubclust)
library(Rsubclust)
kpcf2 = kpcf(data, K=2, dims=c(2,2))
kpcf3 = kpcf(data, K=3, dims=c(2,2,2))
xpart = matrix(rnorm(5), nrow=nrow = )
xpart = matrix(rnorm(5), nrow=1)
cov(xpart)
xpart
library(Rsubclust)
kpcf2 = kpcf(data, K=2, dims=c(2,2))
kpcf3 = kpcf(data, K=3, dims=c(2,2,2))
kpcf4 = kpcf(data, K=4, dims=c(2,2,2,2))
library(Rsubclust)
library(Rsubclust)
kpcf2 = kpcf(data, K=2, dims=c(2,2))
kpcf3 = kpcf(data, K=3, dims=c(2,2,2))
kpcf4 = kpcf(data, K=4, dims=c(2,2,2,2))
library(Rsubclust)
kpcf2 = kpcf(data, K=2, dims=c(2,2))
kpcf3 = kpcf(data, K=3, dims=c(2,2,2))
kpcf4 = kpcf(data, K=4, dims=c(2,2,2,2))
## extract clustering
finc2 = kpcf2$cluster
finc3 = kpcf3$cluster
finc4 = kpcf4$cluster
## visualize
opar <- par(mfrow=c(3,4), no.readonly=TRUE)
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(2,3)")
par(opar)
tester = simLP(n=100, nl=2, np=0)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## run k-plane algorithm with K=2, 3, and 4
kpcf2 = kpcf(data, K=2, dims=c(1,1))
kpcf3 = kpcf(data, K=3, dims=c(1,1,1))
kpcf4 = kpcf(data, K=4, dims=c(1,1,1,1))
## extract clustering
finc2 = kpcf2$cluster
finc3 = kpcf3$cluster
finc4 = kpcf4$cluster
## visualize
opar <- par(mfrow=c(3,4), no.readonly=TRUE)
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(2,3)")
par(opar)
library(Rsubclust)
tester = simLP(n=100, nl=2, np=0)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## run k-plane algorithm with K=2, 3, and 4
kpcf2 = kpcf(data, K=2, dims=c(1,1))
kpcf3 = kpcf(data, K=3, dims=c(1,1,1))
kpcf4 = kpcf(data, K=4, dims=c(1,1,1,1))
## extract clustering
finc2 = kpcf2$cluster
finc3 = kpcf3$cluster
finc4 = kpcf4$cluster
## visualize
opar <- par(mfrow=c(3,4), no.readonly=TRUE)
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(2,3)")
par(opar)
library(Rsubclust)
## generate a toy example of two line components
set.seed(18)
tester = simLP(n=100, nl=2, np=0)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## run k-plane algorithm with K=2, 3, and 4
kpcf2 = kpcf(data, K=2, dims=c(1,1))
kpcf3 = kpcf(data, K=3, dims=c(1,1,1))
kpcf4 = kpcf(data, K=4, dims=c(1,1,1,1))
## extract clustering
finc2 = kpcf2$cluster
finc3 = kpcf3$cluster
finc4 = kpcf4$cluster
## visualize
opar <- par(mfrow=c(3,4), no.readonly=TRUE)
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(2,3)")
par(opar)
## generate a toy example of two line components
set.seed(18)
tester = simLP(n=100, nl=2, np=0)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## run k-plane algorithm with K=2, 3, and 4
kpcf2 = kpcf(data, K=2, dims=c(1,1))
kpcf3 = kpcf(data, K=3, dims=c(1,1,1))
kpcf4 = kpcf(data, K=4, dims=c(1,1,1,1))
## extract clustering
finc2 = kpcf2$cluster
finc3 = kpcf3$cluster
finc4 = kpcf4$cluster
## visualize
opar <- par(mfrow=c(3,4), no.readonly=TRUE)
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(2,3)")
par(opar)
set.seed(19)
tester = simLP(n=100, nl=2, np=0)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## run k-plane algorithm with K=2, 3, and 4
kpcf2 = kpcf(data, K=2, dims=c(1,1))
kpcf3 = kpcf(data, K=3, dims=c(1,1,1))
kpcf4 = kpcf(data, K=4, dims=c(1,1,1,1))
## extract clustering
finc2 = kpcf2$cluster
finc3 = kpcf3$cluster
finc4 = kpcf4$cluster
## visualize
opar <- par(mfrow=c(3,4), no.readonly=TRUE)
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(2,3)")
par(opar)
set.seed(19)
tester = simLP(n=100, nl=2, np=0)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## run k-plane algorithm with K=2, 3, and 4
kpcf2 = kpcf(data, K=2, dims=c(1,1))
kpcf3 = kpcf(data, K=3, dims=c(1,1,1))
kpcf4 = kpcf(data, K=4, dims=c(1,1,1,1))
## extract clustering
finc2 = kpcf2$cluster
finc3 = kpcf3$cluster
finc4 = kpcf4$cluster
## visualize
opar <- par(mfrow=c(3,4), no.readonly=TRUE)
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(2,3)")
par(opar)
set.seed(19)
tester = simLP(n=100, nl=2, np=0)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## run k-plane algorithm with K=2, 3, and 4
kpcf2 = kpcf(data, K=2, dims=c(1,1))
kpcf3 = kpcf(data, K=3, dims=c(1,1,1))
kpcf4 = kpcf(data, K=4, dims=c(1,1,1,1))
## extract clustering
finc2 = kpcf2$cluster
finc3 = kpcf3$cluster
finc4 = kpcf4$cluster
## visualize
opar <- par(mfrow=c(3,4), no.readonly=TRUE)
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(2,3)")
par(opar)
library(Rsubclust)
d5
rankMatrix(d5)
Matrix::rankMatrix(d5)
Matrix::rankMatrix(d5)[1]
library(Rsubclust)
library(Rsubclust)
set.seed(19)
tester = simLP(n=100, nl=2, np=0)
data   = tester$data
label  = tester$class
## do PCA for data reduction
proj = base::eigen(stats::cov(data))$vectors[,1:2]
dat2 = data%*%proj
## run k-plane algorithm with K=2, 3, and 4
kpcv2 = kpcv(data, K=2)
kpcv3 = kpcv(data, K=3)
kpcv4 = kpcv(data, K=4)
## extract clustering
finc2 = kpcv2$cluster
finc3 = kpcv3$cluster
finc4 = kpcv4$cluster
## visualize
opar <- par(mfrow=c(3,4), no.readonly=TRUE)
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc2+1,main="K=2:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc3+1,main="K=3:Axis(2,3)")
plot(dat2[,1],dat2[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:PCA")
plot(data[,1],data[,2],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,2)")
plot(data[,1],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(1,3)")
plot(data[,2],data[,3],pch=19,cex=0.3,col=finc4+1,main="K=4:Axis(2,3)")
par(opar)
library(Rsubclust)
kpcv2$dfixed
kpcv3$dfixed
kpcv4$dfixed
